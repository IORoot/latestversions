name: Github Repos
on:
  workflow_dispatch:
  workflow_call:
    secrets:
      FAUNADB_API_KEY:
        required: true
  
env:
  category: ide

jobs:

  get:

    strategy:
      fail-fast: false
      matrix:
        repo : [
          'microsoft/vscode',
          'notepad-plus-plus/notepad-plus-plus',
          'textmate/textmate'
        ]
      

    runs-on: ubuntu-latest


    steps:

      - name: Checkout repo
        uses: actions/checkout@v2


      - uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/${{ matrix.repo }}/releases/latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Repo data into data.json
        run: | 
          echo '${{ steps.get_latest_release.outputs.data }}' | tr '\r\n' ' ' > ./data.json
          cat ./data.json


      - name: Get the repo details
        uses: sergeysova/jq-action@v2
        id: get_repo_details
        with:
          cmd: "jq '.[] | select( .repo | contains(\"${{ matrix.repo }}\") )' ./sources/github.json  -r > ./source.json"


      - name: Get Release tag_name
        uses: sergeysova/jq-action@v2
        id: release_tag_name
        with:
          # cmd: "jq '{\"records\": [{ \"fields\": {id: .[1].id, title: .[1].title, version: .[0].tag_name, link: .[1].download, date: (now| todateiso8601) }}]}' -s ./data.json ./source.json  -r > ./results.json"
          cmd: "jq '{\"records\": [{ \"fields\": {category: .[1].category, company: .[1].company, title: .[1].title, version: .[0].tag_name, link: .[1].download, date: (now| todateiso8601), logo_url: .[1].logo_url, colour1: .[1].colour1, colour2: .[1].colour2, }}]}' -s ./data.json ./source.json  -r > ./results.json"


      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      
      - name: Install FaunaDB
        run: |
          npm i -g fauna-shell

      - name: Import Data
        run: |         
          fauna import --append --secret=${{ secrets.FAUNADB_API_KEY }} --collection=versions --path ./results.json

